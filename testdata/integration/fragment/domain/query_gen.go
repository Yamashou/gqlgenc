// Code generated by github.com/Yamashou/gqlgenc, DO NOT EDIT.

package domain

// Fragment
type UserFragment1 struct {
	Name string "json:\"name\" graphql:\"name\""
}

func (t *UserFragment1) GetName() string {
	if t == nil {
		t = &UserFragment1{}
	}
	return t.Name
}

type UserFragment2 struct {
	Name string             "json:\"name\" graphql:\"name\""
	User UserFragment2_User "graphql:\"... on User\""
}

func (t *UserFragment2) GetName() string {
	if t == nil {
		t = &UserFragment2{}
	}
	return t.Name
}
func (t *UserFragment2) GetUser() *UserFragment2_User {
	if t == nil {
		t = &UserFragment2{}
	}
	return &t.User
}

// Structs
type UserFragment2_User struct {
	Name string "json:\"name\" graphql:\"name\""
}

func (t *UserFragment2_User) GetName() string {
	if t == nil {
		t = &UserFragment2_User{}
	}
	return t.Name
}

type UserOperation_User_User_UserFragment2_User struct {
	Name string "json:\"name\" graphql:\"name\""
}

func (t *UserOperation_User_User_UserFragment2_User) GetName() string {
	if t == nil {
		t = &UserOperation_User_User_UserFragment2_User{}
	}
	return t.Name
}

type UserOperation_User_User struct {
	Name string                                     "json:\"name\" graphql:\"name\""
	User UserOperation_User_User_UserFragment2_User "graphql:\"... on User\""
}

func (t *UserOperation_User_User) GetName() string {
	if t == nil {
		t = &UserOperation_User_User{}
	}
	return t.Name
}
func (t *UserOperation_User_User) GetUser() *UserOperation_User_User_UserFragment2_User {
	if t == nil {
		t = &UserOperation_User_User{}
	}
	return &t.User
}

type UserOperation_User struct {
	User UserOperation_User_User "graphql:\"... on User\""
	Name string                  "json:\"name\" graphql:\"name\""
}

func (t *UserOperation_User) GetUser() *UserOperation_User_User {
	if t == nil {
		t = &UserOperation_User{}
	}
	return &t.User
}
func (t *UserOperation_User) GetName() string {
	if t == nil {
		t = &UserOperation_User{}
	}
	return t.Name
}

// OperationResponse
type UserOperation struct {
	User UserOperation_User "json:\"user\" graphql:\"user\""
}

func (t *UserOperation) GetUser() *UserOperation_User {
	if t == nil {
		t = &UserOperation{}
	}
	return &t.User
}

// Operation
const UserOperationDocument = `query UserOperation {
	user {
		name
		... UserFragment1
		... UserFragment2
		... on User {
			name
			... UserFragment1
			... UserFragment2
		}
	}
}
fragment UserFragment1 on User {
	name
	name
}
fragment UserFragment2 on User {
	name
	... on User {
		name
	}
}
`

var DocumentOperationNames = map[string]string{
	UserOperationDocument: "UserOperation",
}
