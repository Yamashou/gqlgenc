// Code generated by github.com/Yamashou/gqlgenc, DO NOT EDIT.

package domain

// Fragment

// GeneratedTypes
type UserFragment1 struct {
	Name string "json:\"name\" graphql:\"name\""
}

func (t *UserFragment1) GetName() string {
	if t == nil {
		t = &UserFragment1{}
	}
	return t.Name
}

type UserOperation_User struct{ UserFragment1 UserFragment1 }

func (t *UserOperation_User) GetUserFragment1() *UserFragment1 {
	if t == nil {
		t = &UserOperation_User{}
	}
	return &t.UserFragment1
}

type UserOperation struct {
	User UserOperation_User "json:\"user\" graphql:\"user\""
}

func (t *UserOperation) GetUser() *UserOperation_User {
	if t == nil {
		t = &UserOperation{}
	}
	return &t.User
}

// Operation
const UserOperationDocument = `query UserOperation {
	user {
		... UserFragment1
	}
}
fragment UserFragment1 on User {
	name
}
`

var DocumentOperationNames = map[string]string{
	UserOperationDocument: "UserOperation",
}
