// Code generated by github.com/Yamashou/gqlgenc, DO NOT EDIT.

package domain

// Fragment
type UserFragment1 struct {
	Name    string                "json:\"name\" graphql:\"name\""
	Profile UserFragment1_Profile "json:\"profile\" graphql:\"profile\""
}
type UserFragment2 struct {
	Name string "json:\"name\" graphql:\"name\""
}

// NestedQuery
type UserFragment1_Profile struct {
	Age int "json:\"age\" graphql:\"age\""
}
type UserOperation_User_Profile struct {
	Age int "json:\"age\" graphql:\"age\""
}
type UserOperation_User struct {
	Name    string                     "json:\"name\" graphql:\"name\""
	Profile UserOperation_User_Profile "json:\"profile\" graphql:\"profile\""
}

// OperationResponse
type UserOperation struct {
	User UserOperation_User "json:\"user\" graphql:\"user\""
}

func (t *UserOperation) GetUser() *UserOperation_User {
	if t == nil {
		t = &UserOperation{}
	}
	return &t.User
}

// Operation
const UserOperationDocument = `query UserOperation {
	user {
		name
		profile {
			age
		}
		... UserFragment1
		... UserFragment2
	}
}
fragment UserFragment1 on User {
	name
	name
	profile {
		age
	}
}
fragment UserFragment2 on User {
	name
}
`

var DocumentOperationNames = map[string]string{
	UserOperationDocument: "UserOperation",
}
