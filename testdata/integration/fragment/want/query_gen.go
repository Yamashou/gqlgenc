// Code generated by github.com/Yamashou/gqlgenc, DO NOT EDIT.

package domain

type UserFragment1 struct {
	User struct {
		Name string "json:\"name\" graphql:\"name\""
	} "graphql:\"... on User\""
	Name    string                 "json:\"name\" graphql:\"name\""
	Profile *UserFragment1_Profile "json:\"profile\" graphql:\"profile\""
}

func (t *UserFragment1) GetUser() struct {
	Name string "json:\"name\" graphql:\"name\""
} {
	if t == nil {
		t = &UserFragment1{}
	}
	return t.User
}
func (t *UserFragment1) GetName() string {
	if t == nil {
		t = &UserFragment1{}
	}
	return t.Name
}
func (t *UserFragment1) GetProfile() *UserFragment1_Profile {
	if t == nil {
		t = &UserFragment1{}
	}
	return t.Profile
}

type UserFragment1_Profile struct {
	Age int "json:\"age\" graphql:\"age\""
}

func (t *UserFragment1_Profile) GetAge() int {
	if t == nil {
		t = &UserFragment1_Profile{}
	}
	return t.Age
}

type UserFragment2 struct {
	Name string "json:\"name\" graphql:\"name\""
}

func (t *UserFragment2) GetName() string {
	if t == nil {
		t = &UserFragment2{}
	}
	return t.Name
}

type UserOperation struct {
	User *UserOperation_User "json:\"user\" graphql:\"user\""
}

func (t *UserOperation) GetUser() *UserOperation_User {
	if t == nil {
		t = &UserOperation{}
	}
	return t.User
}

type UserOperation_User struct {
	User struct {
		UserFragment2
		Name string "json:\"name\" graphql:\"name\""
	} "graphql:\"... on User\""
	UserFragment1
	UserFragment2
	Name    string                      "json:\"name\" graphql:\"name\""
	Profile *UserOperation_User_Profile "json:\"profile\" graphql:\"profile\""
}

func (t *UserOperation_User) GetUser() struct {
	UserFragment2
	Name string "json:\"name\" graphql:\"name\""
} {
	if t == nil {
		t = &UserOperation_User{}
	}
	return t.User
}
func (t *UserOperation_User) GetUserFragment1() UserFragment1 {
	if t == nil {
		t = &UserOperation_User{}
	}
	return t.UserFragment1
}
func (t *UserOperation_User) GetUserFragment2() UserFragment2 {
	if t == nil {
		t = &UserOperation_User{}
	}
	return t.UserFragment2
}
func (t *UserOperation_User) GetName() string {
	if t == nil {
		t = &UserOperation_User{}
	}
	return t.Name
}
func (t *UserOperation_User) GetProfile() *UserOperation_User_Profile {
	if t == nil {
		t = &UserOperation_User{}
	}
	return t.Profile
}

type UserOperation_User_Profile struct {
	Age    int    "json:\"age\" graphql:\"age\""
	Status Status "json:\"status\" graphql:\"status\""
}

func (t *UserOperation_User_Profile) GetAge() int {
	if t == nil {
		t = &UserOperation_User_Profile{}
	}
	return t.Age
}
func (t *UserOperation_User_Profile) GetStatus() Status {
	if t == nil {
		t = &UserOperation_User_Profile{}
	}
	return t.Status
}

const UserOperationDocument = `query UserOperation {
	user {
		name
		profile {
			status
			age
		}
		... UserFragment1
		... UserFragment2
		... on User {
			name
			... UserFragment2
		}
	}
}
fragment UserFragment1 on User {
	name
	name
	... on User {
		name
	}
	profile {
		age
	}
}
fragment UserFragment2 on User {
	name
}
`

var DocumentOperationNames = map[string]string{
	UserOperationDocument: "UserOperation",
}
